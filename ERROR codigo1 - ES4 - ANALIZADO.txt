Call:   program
  Call:   declaration_list
    Call:   declaration
      Call:   var_declaration(LOOKING AHEAD...)
        Call:   type_specifier(LOOKING AHEAD...)
7. Se encontro el tipo de dato int: int
          Visited token: <"int" at line 7 column 1>; Expected token: <"int">
        Return: type_specifier(LOOKAHEAD SUCCEEDED)
7. Se encontro un identificador: gcd
        Visited token: <<IDENTIFICADOR>: "gcd" at line 7 column 5>; Expected token: <<IDENTIFICADOR>>
7. Se encontro el simbolo de parentesis abierto: (
        Visited token: <<SIMBOLO_PARENTESIS_ABIERTO>: "(" at line 7 column 8>; Expected token: <<SIMBOLO_CORCHETE_ABIERTO>>
        Visited token: <<SIMBOLO_PARENTESIS_ABIERTO>: "(" at line 7 column 8>; Expected token: <<SIMBOLO_COMA>>
        Visited token: <<SIMBOLO_PARENTESIS_ABIERTO>: "(" at line 7 column 8>; Expected token: <<SIMBOLO_PUNTO_Y_COMA>>
      Return: var_declaration(LOOKAHEAD FAILED)
      Call:   fun_declaration
        Call:   type_specifier
          Consumed token: <"int" at line 7 column 1>
        Return: type_specifier
        Consumed token: <<IDENTIFICADOR>: "gcd" at line 7 column 5>
        Consumed token: <<SIMBOLO_PARENTESIS_ABIERTO>: "(" at line 7 column 8>
        Call:   params
          Call:   param_list(LOOKING AHEAD...)
            Call:   param(LOOKING AHEAD...)
              Call:   type_specifier(LOOKING AHEAD...)
7. Se encontro el tipo de dato int: int
                Visited token: <"int" at line 7 column 9>; Expected token: <"int">
              Return: type_specifier(LOOKAHEAD SUCCEEDED)
7. Se encontro el simbolo coma: ,
              Visited token: <<SIMBOLO_COMA>: "," at line 7 column 12>; Expected token: <<IDENTIFICADOR>>
            Return: param(LOOKAHEAD FAILED)
          Return: param_list(LOOKAHEAD FAILED)
        Return: params
      Return: fun_declaration
    Return: declaration
  Return: declaration_list
Return: program
